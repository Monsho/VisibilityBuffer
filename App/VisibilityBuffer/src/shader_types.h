#pragma once

enum ShaderName
{
	DepthVV,
	MeshVV,
	MeshP,
	VisibilityVV,
	VisibilityP,
	LightingC,
	IndirectC,
	FullscreenVV,
	TonemapP,
	ClassifyC,
	MatDepthP,
	ClearArgC,
	MaterialTileVV,
	MaterialTileP,
	ShadowVV,
	ShadowP,
	BlurP,
	NormalToDerivC,
	TriplanarVV,
	TriplanarP,
	MaterialTileTriplanarP,
	SsaoHbaoC,
	SsaoBitmaskC,
	SsgiC,
	SsgiDIC,
	DenoiseC,
	DenoiseWithGIC,
	DeinterleaveC,
	MeshletCullC,
	ClearMipC,
	FeedbackMipC,
	VisibilityMesh1stA,
	VisibilityMesh2ndA,
	VisibilityMeshM,
	VisibilityMeshP,
	DepthReductionP,
	DepthReductionC,
	MaterialResolveLib,

	MAX
};

static const char* kShaderFileAndEntry[] = {
	"depth.vv.hlsl",					"main",
	"mesh.vv.hlsl",						"main",
	"mesh.p.hlsl",						"main",
	"visibility.vv.hlsl",				"main",
	"visibility.p.hlsl",				"main",
	"lighting.c.hlsl",					"main",
	"indirect_lighting.c.hlsl",			"main",
	"fullscreen.vv.hlsl",				"main",
	"tonemap.p.hlsl",					"main",
	"classify.c.hlsl",					"main",
	"material_depth.p.hlsl",			"main",
	"clear_arg.c.hlsl",					"main",
	"material_tile.vv.hlsl",			"main",
	"material_tile.p.hlsl",				"main",
	"shadow.vv.hlsl",					"main",
	"shadow.p.hlsl",					"main",
	"blur.p.hlsl",						"main",
	"ts_normal_to_deriv.c.hlsl",		"main",
	"triplanar.vv.hlsl",				"main",
	"triplanar.p.hlsl",					"main",
	"material_tile_triplanar.p.hlsl",	"main",
	"ssao_hbao.c.hlsl",					"main",
	"ssao_bitmask.c.hlsl",				"main",
	"ssgi_standard.c.hlsl",				"main",
	"ssgi_deinterleave.c.hlsl",			"main",
	"denoise.c.hlsl",					"main",
	"denoise_with_gi.c.hlsl",			"main",
	"deinterleave.c.hlsl",				"main",
	"meshlet_cull.c.hlsl",				"main",
	"miplevel_feedback.c.hlsl",			"ClearCS",
	"miplevel_feedback.c.hlsl",			"FeedbackCS",
	"visibility_mesh_1st.a.hlsl",		"main",
	"visibility_mesh_2nd.a.hlsl",		"main",
	"visibility_mesh.m.hlsl",			"main",
	"visibility_mesh.p.hlsl",			"main",
	"depth_reduction.p.hlsl",			"main",
	"depth_reduction.c.hlsl",			"main",
	"material_resolve.lib.hlsl",		"main",
};

//	EOF
